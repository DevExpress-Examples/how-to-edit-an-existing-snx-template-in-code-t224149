' Developer Express Code Central Example:
' How to generate a document layout in code via the Snap application programming interface (API)
' 
' This example illustrates the Snap API
' (https://documentation.devexpress.com/#WindowsForms/CustomDocument14525) that is
' used to generate a document from scratch and connect it to data completely in
' code.
' The following code generates a tabular report layout. For a sample code
' that creates a mail-merge report (in the context of SnapDocumentServer
' (https://documentation.devexpress.com/#DocumentServer/clsDevExpressSnapSnapDocumentServertopic)),
' refer to the following example: How to automatically create mail-merge documents
' using the Snap Document Server
' (https://www.devexpress.com/Support/Center/CodeCentral/ViewExample.aspx?exampleId=E5078).
' SnapControl
' (https://documentation.devexpress.com/#WindowsForms/clsDevExpressSnapSnapControltopic)
' extends the RichEditControl
' (https://documentation.devexpress.com/#WindowsForms/clsDevExpressXtraRichEditRichEditControltopic)'s
' API and introduces the SnapList
' (http://documentation.devexpress.com/#WindowsForms/clsDevExpressSnapCoreAPISnapListtopic)
' class that is used to insert dynamic data elements into a document.
' To generate
' a data-aware Snap document, do the following:
' - Create a Snap application and
' connect it to a data source
' (http://documentation.devexpress.com/#WindowsForms/CustomDocument16043).
' - Add
' a SnapList to the SnapDocument
' (http://documentation.devexpress.com/#WindowsForms/clsDevExpressSnapCoreAPISnapDocumenttopic).
' -
' To generate the SnapList layout, define the ListHeader, ListFooter, and
' RowTemplate
' (http://documentation.devexpress.com/#WindowsForms/DevExpressSnapCoreAPISnapList_RowTemplatetopic).
' - Inject data fields
' (http://documentation.devexpress.com/#WindowsForms/CustomDocument15559) into the
' document (e.g., by using SnapText to display text data).
' - Format the document
' content (see the FormatList method implementation in the Form1.cs file of the
' sample solution).
' - If required, apply grouping, sorting, and/or filtering to
' the SnapList content.
' A SnapEntity
' (http://documentation.devexpress.com/#WindowsForms/clsDevExpressSnapCoreAPISnapEntitytopic)
' is open to customization only after calling its BeginUpdate method and not after
' the EndUpdate method is called to apply the new settings (see the GenerateLayout
' method in the Form1.cs file of the sample solution).
' 
' You can find sample updates and versions for different programming languages here:
' http://www.devexpress.com/example=E4781

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------


Imports Microsoft.VisualBasic
	Imports System
Namespace My


	''' <summary>
	'''   A strongly-typed resource class, for looking up localized strings, etc.
	''' </summary>
	' This class was auto-generated by the StronglyTypedResourceBuilder
	' class via a tool like ResGen or Visual Studio.
	' To add or remove a member, edit your .ResX file then rerun ResGen
	' with the /str option, or rebuild your VS project.
	<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0"), Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute()> _
	Friend Class Resources

		Private Shared resourceMan As Global.System.Resources.ResourceManager

		Private Shared resourceCulture As Global.System.Globalization.CultureInfo

		<Global.System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")> _
		Friend Sub New()
		End Sub

		''' <summary>
		'''   Returns the cached ResourceManager instance used by this class.
		''' </summary>
		<Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
		Friend Shared ReadOnly Property ResourceManager() As Global.System.Resources.ResourceManager
			Get
				If Object.ReferenceEquals(resourceMan, Nothing) Then
					Dim temp As New Global.System.Resources.ResourceManager("Resources", GetType(Resources).Assembly)
					resourceMan = temp
				End If
				Return resourceMan
			End Get
		End Property

		''' <summary>
		'''   Overrides the current thread's CurrentUICulture property for all
		'''   resource lookups using this strongly typed resource class.
		''' </summary>
		<Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)> _
		Friend Shared Property Culture() As Global.System.Globalization.CultureInfo
			Get
				Return resourceCulture
			End Get
			Set(ByVal value As System.Globalization.CultureInfo)
				resourceCulture = value
			End Set
		End Property
	End Class
End Namespace
